#23 45- 34-56 
enc=[ 0x0024, 0x000B, 0x006D, 0x000F, 0x0003, 0x0032, 0x0042, 0x001D, 
    0x002B, 0x0043, 0x0078, 0x0043, 0x0073, 0x0030, 0x002B, 0x004E, 
    0x0063, 0x0048, 0x0077, 0x002E, 0x0032, 0x0039, 0x001A, 0x0012, 
    0x0071, 0x007A, 0x0042, 0x0017, 0x0045, 0x0072, 0x0056, 0x000C, 
    0x005C, 0x004A, 0x0062, 0x0053, 0x0033,]
print(len(enc))
from z3 import *
cin=[BitVec('cin[%d]'%i ,11) for i in range(40) ]
S=  Solver()
for i in range(40):
    S.add(cin[i]>32 ,cin[i]<128)
S.add(cin[36]==126)
for i in range(36):
    S.add((cin[i%37]^cin[(i+1)%37]) ^ (cin[(i+2)%37]^cin[(i+3)%37]) == enc[i])

S.check()
ans = S.model()
for i in cin:
    print(chr(ans[i].as_long()),end='')
print()
# for i in "EZToj<6c[LiU3wRepl7H[SnTPpf7[H3elli5zDXU":
#     print(hex(ord(i)),end=',')

#0x45,0x5a,0x54,0x6f,0x6a,0x3c,0x36,0x63,0x5b,0x4c,0x69,0x55,0x33,0x77,0x52,0x65,0x70,0x6c,0x37,0x48,0x5b,0x53,0x6e,0x54,0x50,0x70,0x66,0x37,0x5b,0x48,0x33,0x65,0x6c,0x6c,0x69,0x35,0x7a

# print()
# print(hex(0x6c^0x6b^0x3f^0x61))

